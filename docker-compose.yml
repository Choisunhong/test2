version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - webapp
    networks:
      - frontend
    restart: always

  webapp:
    image: choisunhong5717/react:1.0
    restart: always
    networks:
      - frontend
    volumes:
      - ./react-app:/app
    deploy:
      replicas: 3
      mode: replicated

  haproxy:
    image: haproxy:latest
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    restart: always
    ports:
     - "8000:8000"
    networks:
      - frontend
      - backend
    depends_on:
      - django
  mysql-container:
    image: mysql:8.0.36
    environment:
      MYSQL_ROOT_PASSWORD: "pass123#"
      MYSQL_DATABASE: "docker_db"
    restart: always
    ports:
      - "3366:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
  django:
    image: ohhong/docker_django:3.10
    depends_on:
      mysql-container:
        condition: service_healthy
    networks:
      - backend
    environment:
      - DB_HOST=mysql-container
      - DB_PORT=3306
      - DB_NAME=docker_db
      - DB_USER=root
      - DB_PASSWORD=pass123#
    deploy:
      replicas: 3
      mode: replicated

networks:
  frontend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24

  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/24
volumes:
  db_data:
